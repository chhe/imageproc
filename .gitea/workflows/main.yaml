name: main

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: Install rust
      uses: dtolnay/rust-toolchain@master
      with:
          toolchain: stable

    - uses: Swatinem/rust-cache@v2
      with:
        cache-all-crates: "true"

    - name: Run cargo build main
      run: cargo build --all --release 

  unit-test:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: Install rust
      uses: dtolnay/rust-toolchain@master
      with:
          toolchain: nightly

    - uses: Swatinem/rust-cache@v2
      with:
        cache-all-crates: "true"
     
    - name: Run cargo test
      run: cargo test

  check:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: Install rust
      uses: dtolnay/rust-toolchain@master
      with:
          toolchain: stable

    - uses: Swatinem/rust-cache@v2
      with:
        cache-all-crates: "true"       

    - name: Run cargo check
      run: cargo check

  clippy:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: Install latest rust
      uses: dtolnay/rust-toolchain@master
      with:
          toolchain: stable
          components: clippy

    - uses: Swatinem/rust-cache@v2
      with:
        cache-all-crates: "true"   

    - name: Run clippy
      run: cargo clippy -- -D warnings
        
  format:
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: Install latest rust
      uses: dtolnay/rust-toolchain@master
      with:
          toolchain: stable
          components: rustfmt

    - name: Format
      run: cargo fmt -- --check